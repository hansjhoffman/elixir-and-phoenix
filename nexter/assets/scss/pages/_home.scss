.container {
  display: grid;
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content); //it's actually better to just specify columns only
  grid-template-columns: 8rem minmax(6rem, 1fr) repeat(8, minmax(min-content, 14rem)) minmax(6rem, 1fr);

  @media only screen and (max-width: $breakpoint-lg) {
    grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
    grid-template-columns: minmax(6rem, 1fr) repeat(8, minmax(min-content, 14rem)) minmax(6rem, 1fr);
  }

  @media only screen and (max-width: $breakpoint-md) {
    grid-template-rows: 6rem calc(100vh - 6rem);
  }
}

.features {
  margin: 15rem 0;

  @supports (display: grid) {
    grid-column: 3 / 11;
    @media only screen and (max-width: $breakpoint-lg) {
      grid-column: 2 / 10;
    }
    @media only screen and (max-width: $breakpoint-md) {
      margin: 8rem 0;
    }
    display: grid; //because CSS subgrids aren't available yet
    // grid-template-columns: repeat(3, 1fr); not responsive
    grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr)); //responsive!! So cool! No media query required :)
    grid-gap: 6rem;
    align-items: start;
  }

}

.feature {
  float: left;
  width: 33.33333%;
  margin-bottom: 6rem;

  @supports (display: grid) {
    width: auto;
    margin-bottom: 0;
    display: grid;
    grid-template-columns: min-content 1fr;
    grid-row-gap: 1.5rem;
    grid-column-gap: 2.5rem;
  }


  &__icon {
    fill: $color-primary;
    height: 4.5rem;
    width: 4.5rem;
    // grid-row: 1 / -1; only works on an explicit grid
    grid-row: 1 / span 2;
    transform: translateY(-1rem); //used to center icon horizontally w/ heading-4
  }

  &__text {
    font-size: 1.7rem;
  }
}
